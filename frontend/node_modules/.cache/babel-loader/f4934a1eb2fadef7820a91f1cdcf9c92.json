{"ast":null,"code":"import _slicedToArray from\"/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import _ from\"lodash\";import Board from\"./Board\";import Row from\"react-bootstrap/Row\";import Col from\"react-bootstrap/Col\";import Button from\"react-bootstrap/Button\";import Form from\"react-bootstrap/Form\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faUndo,faRedo,faArrowUp}from\"@fortawesome/free-solid-svg-icons\";import{axios}from\"../Axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Game(){var history=useHistory();var _useState=useState(0),_useState2=_slicedToArray(_useState,2),highestScore=_useState2[0],setHighestScore=_useState2[1];// State variable to keep track of the score\nvar _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),score=_useState4[0],setScore=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),gameOver=_useState6[0],setGameOver=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),error=_useState10[0],setError=_useState10[1];// Function to generate random numbers\nfunction getRandomInt(max){return Math.floor(Math.random()*max);}// Define row and columns\nvar rows=[0,1,2,3,4];var columns=[0,1,2,3,4];// Possible directions the roobot can travel in\nvar directions=[\"N\",\"E\",\"S\",\"W\"];// State variable to keep track of the robot's direction\nvar _useState11=useState(\"N\"),_useState12=_slicedToArray(_useState11,2),direction=_useState12[0],setDirection=_useState12[1];// State variable to keep track of the robot's position\nvar _useState13=useState([2,2]),_useState14=_slicedToArray(_useState13,2),robotPosition=_useState14[0],setRobotPosition=_useState14[1];// Generate a random spot on the board for the target\nvar randomTargetPosition=[getRandomInt(5),getRandomInt(5)];// Make sure the randomly generated spot for the target is not the same as the robot's position\nwhile(_.isEqual(randomTargetPosition,robotPosition)){randomTargetPosition=[getRandomInt(5),getRandomInt(5)];}// State variable to keep track of the target's position\nvar _useState15=useState(randomTargetPosition),_useState16=_slicedToArray(_useState15,2),targetPosition=_useState16[0],setTargetPosition=_useState16[1];// Icons\nvar rotateLeftIcon=/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUndo});var rotateRightIcon=/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faRedo});var arrowUpIcon=/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowUp});// Set Timer\nvar _useState17=useState([60]),_useState18=_slicedToArray(_useState17,2),time=_useState18[0],setTime=_useState18[1];useEffect(function(){var apiUrl=\"scores/current-highest-score\";axios.get(apiUrl).then(function(response){console.log(response.data);setHighestScore(response.data.highest_score);}).catch(function(err){return console.log(err);});});// Re-render the page every second\nuseEffect(function(){if(!gameOver){var interval=setInterval(function(){return setTime(function(time){return time-1;});},1000);if(time===0){console.log(\"Time Ran out\");setGameOver(true);}return function(){return clearInterval(interval);};}},[time,history,gameOver]);//   Function to handle right rotation of Robot\nvar rotateRight=function rotateRight(){var currentDirection=directions.findIndex(function(element){return element===direction;});if(currentDirection===3){setDirection(directions[0]);}else{setDirection(directions[currentDirection+1]);}};// Function to handle left rotation of Robot\nvar rotateLeft=function rotateLeft(){var currentDirection=directions.findIndex(function(element){return element===direction;});if(currentDirection===0){setDirection(directions[3]);}else{setDirection(directions[currentDirection-1]);}};// Function to handle forward movement of Robot\nvar moveForward=function moveForward(){if(direction===\"N\"){if(robotPosition[0]!==0){setRobotPosition([robotPosition[0]-1,robotPosition[1]]);}else{setGameOver(true);}}if(direction===\"E\"){if(robotPosition[1]!==4){setRobotPosition([robotPosition[0],robotPosition[1]+1]);}else{setGameOver(true);}}if(direction===\"S\"){if(robotPosition[0]!==4){setRobotPosition([robotPosition[0]+1,robotPosition[1]]);}else{setGameOver(true);}}if(direction===\"W\"){if(robotPosition[1]!==0){setRobotPosition([robotPosition[0],robotPosition[1]-1]);}else{setGameOver(true);}}};useEffect(function(){console.log(\"Robot position is \"+robotPosition);console.log(\"Target Position is \"+targetPosition);if(_.isEqual(robotPosition,targetPosition)){console.log(\"Got the Target!!\");//   Get a spot on the board for the target\nvar _randomTargetPosition=[getRandomInt(5),getRandomInt(5)];//   Make sure the randomly generated spot for the target is not the same as the robot's position\nwhile(_.isEqual(_randomTargetPosition,robotPosition)){_randomTargetPosition=[getRandomInt(5),getRandomInt(5)];}setTargetPosition(_randomTargetPosition);setScore(function(score){return score+1;});}},[robotPosition,targetPosition,setScore]);var handleNameSubmit=function handleNameSubmit(e){e.preventDefault();if(name<3&&name>20){setError(\"Name must be contain at least 3 characters and less than 20 characters\");}else{console.log(\"Submit Name\");setError(\"\");var apiUrl=\"scores/set-score\";axios.post(apiUrl,{params:{username:name,score:score}}).then(function(response){console.log(response.data);}).catch(function(err){console.log(err);});history.push(\"/menu\");}};if(gameOver){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:function onSubmit(e){return handleNameSubmit(e);},children:[/*#__PURE__*/_jsx(Row,{className:\"pt-5 text-center justify-content-center\",children:/*#__PURE__*/_jsxs(Col,{lg:4,children:[score>highestScore?/*#__PURE__*/_jsx(\"h1\",{children:\"New Highscore!\"}):\"\",/*#__PURE__*/_jsxs(\"h3\",{children:[\"Congratulations you scored \",score,\" points\"]}),/*#__PURE__*/_jsx(\"p\",{children:\"Record your name for be entered into the leaderboard.\"})]})}),/*#__PURE__*/_jsx(Row,{className:\"pt-3 justify-content-center\",children:/*#__PURE__*/_jsx(Col,{lg:4,children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",controlId:\"formName\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",maxLength:\"20\",placeholder:\"Enter Name\",onChange:function onChange(e){return setName(e.target.value);}}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:\"Max Characters: 20\"}),/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]})})}),/*#__PURE__*/_jsx(Row,{className:\"pt-3 text-center justify-content-center\",children:/*#__PURE__*/_jsx(Col,{lg:4,children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",type:\"submit\",children:\"Submit\"})})}),/*#__PURE__*/_jsx(Row,{className:\"pt-3 text-center justify-content-center\",children:/*#__PURE__*/_jsx(Col,{lg:4,children:/*#__PURE__*/_jsx(Button,{variant:\"success\",type:\"submit\",onClick:function onClick(e){setGameOver(false);setScore(0);setTime(60);},children:\"Play Again\"})})}),/*#__PURE__*/_jsx(Row,{className:\"pt-3 text-center justify-content-center\",children:/*#__PURE__*/_jsx(Col,{lg:4,children:/*#__PURE__*/_jsx(Button,{variant:\"warning\",type:\"submit\",onClick:function onClick(e){e.preventDefault();history.push(\"/menu\");},children:\"Menu\"})})})]})});}else{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Row,{className:\"pt-5 text-center\",children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Score: \",score]})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"Time: \",time]})})]}),/*#__PURE__*/_jsx(Row,{className:\"pt-3\",children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Board,{rows:rows,columns:columns,targetPosition:targetPosition,robotPosition:robotPosition,direction:direction})})}),/*#__PURE__*/_jsxs(Row,{className:\"pt-5\",children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{className:\"d-grid gap-2\",children:/*#__PURE__*/_jsx(Button,{onClick:rotateLeft,variant:\"primary\",children:rotateLeftIcon})})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{className:\"d-grid gap-2\",children:/*#__PURE__*/_jsx(Button,{onClick:moveForward,variant:\"primary\",children:arrowUpIcon})})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{className:\"d-grid gap-2\",children:/*#__PURE__*/_jsx(Button,{onClick:rotateRight,variant:\"primary\",children:rotateRightIcon})})})]})]});}}export default Game;","map":{"version":3,"sources":["/frontend/src/components/Game.js"],"names":["React","useEffect","useState","useHistory","_","Board","Row","Col","Button","Form","FontAwesomeIcon","faUndo","faRedo","faArrowUp","axios","Game","history","highestScore","setHighestScore","score","setScore","gameOver","setGameOver","name","setName","error","setError","getRandomInt","max","Math","floor","random","rows","columns","directions","direction","setDirection","robotPosition","setRobotPosition","randomTargetPosition","isEqual","targetPosition","setTargetPosition","rotateLeftIcon","rotateRightIcon","arrowUpIcon","time","setTime","apiUrl","get","then","response","console","log","data","highest_score","catch","err","interval","setInterval","clearInterval","rotateRight","currentDirection","findIndex","element","rotateLeft","moveForward","handleNameSubmit","e","preventDefault","post","params","username","push","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Board from \"./Board\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUndo, faRedo, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { axios } from \"../Axios\";\n\nfunction Game() {\n  let history = useHistory();\n\n  const [highestScore, setHighestScore] = useState(0);\n\n  // State variable to keep track of the score\n  const [score, setScore] = useState(0);\n\n  const [gameOver, setGameOver] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Function to generate random numbers\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  // Define row and columns\n  const rows = [0, 1, 2, 3, 4];\n  const columns = [0, 1, 2, 3, 4];\n\n  // Possible directions the roobot can travel in\n  const directions = [\"N\", \"E\", \"S\", \"W\"];\n\n  // State variable to keep track of the robot's direction\n  const [direction, setDirection] = useState(\"N\");\n\n  // State variable to keep track of the robot's position\n  const [robotPosition, setRobotPosition] = useState([2, 2]);\n\n  // Generate a random spot on the board for the target\n  let randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n\n  // Make sure the randomly generated spot for the target is not the same as the robot's position\n  while (_.isEqual(randomTargetPosition, robotPosition)) {\n    randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n  }\n\n  // State variable to keep track of the target's position\n  const [targetPosition, setTargetPosition] = useState(randomTargetPosition);\n\n  // Icons\n  const rotateLeftIcon = <FontAwesomeIcon icon={faUndo} />;\n  const rotateRightIcon = <FontAwesomeIcon icon={faRedo} />;\n  const arrowUpIcon = <FontAwesomeIcon icon={faArrowUp} />;\n\n  // Set Timer\n  const [time, setTime] = useState([60]);\n\n  useEffect(() => {\n    const apiUrl = \"scores/current-highest-score\";\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        console.log(response.data);\n        setHighestScore(response.data.highest_score);\n      })\n      .catch((err) => console.log(err));\n  });\n\n  // Re-render the page every second\n  useEffect(() => {\n    if (!gameOver) {\n      let interval = setInterval(() => setTime((time) => time - 1), 1000);\n\n      if (time === 0) {\n        console.log(\"Time Ran out\");\n        setGameOver(true);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [time, history, gameOver]);\n\n  //   Function to handle right rotation of Robot\n  const rotateRight = () => {\n    const currentDirection = directions.findIndex((element) => {\n      return element === direction;\n    });\n\n    if (currentDirection === 3) {\n      setDirection(directions[0]);\n    } else {\n      setDirection(directions[currentDirection + 1]);\n    }\n  };\n\n  // Function to handle left rotation of Robot\n  const rotateLeft = () => {\n    const currentDirection = directions.findIndex((element) => {\n      return element === direction;\n    });\n\n    if (currentDirection === 0) {\n      setDirection(directions[3]);\n    } else {\n      setDirection(directions[currentDirection - 1]);\n    }\n  };\n\n  // Function to handle forward movement of Robot\n  const moveForward = () => {\n    if (direction === \"N\") {\n      if (robotPosition[0] !== 0) {\n        setRobotPosition([robotPosition[0] - 1, robotPosition[1]]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"E\") {\n      if (robotPosition[1] !== 4) {\n        setRobotPosition([robotPosition[0], robotPosition[1] + 1]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"S\") {\n      if (robotPosition[0] !== 4) {\n        setRobotPosition([robotPosition[0] + 1, robotPosition[1]]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"W\") {\n      if (robotPosition[1] !== 0) {\n        setRobotPosition([robotPosition[0], robotPosition[1] - 1]);\n      } else {\n        setGameOver(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Robot position is \" + robotPosition);\n    console.log(\"Target Position is \" + targetPosition);\n\n    if (_.isEqual(robotPosition, targetPosition)) {\n      console.log(\"Got the Target!!\");\n      //   Get a spot on the board for the target\n      let randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n\n      //   Make sure the randomly generated spot for the target is not the same as the robot's position\n      while (_.isEqual(randomTargetPosition, robotPosition)) {\n        randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n      }\n      setTargetPosition(randomTargetPosition);\n\n      setScore((score) => score + 1);\n    }\n  }, [robotPosition, targetPosition, setScore]);\n\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n\n    if (name < 3 && name > 20) {\n      setError(\n        \"Name must be contain at least 3 characters and less than 20 characters\"\n      );\n    } else {\n      console.log(\"Submit Name\");\n      setError(\"\");\n      const apiUrl = \"scores/set-score\";\n      axios\n        .post(apiUrl, {\n          params: {\n            username: name,\n            score: score,\n          },\n        })\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      history.push(\"/menu\");\n    }\n  };\n\n  if (gameOver) {\n    return (\n      <>\n        <Form onSubmit={(e) => handleNameSubmit(e)}>\n          <Row className=\"pt-5 text-center justify-content-center\">\n            <Col lg={4}>\n              {score > highestScore ? <h1>New Highscore!</h1> : \"\"}\n              <h3>Congratulations you scored {score} points</h3>\n              <p>Record your name for be entered into the leaderboard.</p>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 justify-content-center\">\n            <Col lg={4}>\n              <Form.Group className=\"mb-3\" controlId=\"formName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  maxLength=\"20\"\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n                <Form.Text className=\"text-muted\">Max Characters: 20</Form.Text>\n                <p className=\"error\">{error}</p>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 text-center justify-content-center\">\n            <Col lg={4}>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 text-center justify-content-center\">\n            <Col lg={4}>\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                onClick={(e) => {\n                  setGameOver(false);\n                  setScore(0);\n                  setTime(60);\n                }}\n              >\n                Play Again\n              </Button>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 text-center justify-content-center\">\n            <Col lg={4}>\n              <Button\n                variant=\"warning\"\n                type=\"submit\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  history.push(\"/menu\");\n                }}\n              >\n                Menu\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Row className=\"pt-5 text-center\">\n          <Col>\n            <h3>Score: {score}</h3>\n          </Col>\n          <Col>\n            <h3>Time: {time}</h3>\n          </Col>\n        </Row>\n        <Row className=\"pt-3\">\n          <Col>\n            <Board\n              rows={rows}\n              columns={columns}\n              targetPosition={targetPosition}\n              robotPosition={robotPosition}\n              direction={direction}\n            ></Board>\n          </Col>\n        </Row>\n        <Row className=\"pt-5\">\n          <Col>\n            <div className=\"d-grid gap-2\">\n              <Button onClick={rotateLeft} variant=\"primary\">\n                {rotateLeftIcon}\n              </Button>\n            </div>\n          </Col>\n          <Col>\n            <div className=\"d-grid gap-2\">\n              <Button onClick={moveForward} variant=\"primary\">\n                {arrowUpIcon}\n              </Button>\n            </div>\n          </Col>\n          <Col>\n            <div className=\"d-grid gap-2\">\n              <Button onClick={rotateRight} variant=\"primary\">\n                {rotateRightIcon}\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}