{"ast":null,"code":"var _jsxFileName = \"/Users/zaeemmaqsood/Desktop/robot_game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport Board from \"./Board\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUndo, faRedo, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const rows = [0, 1, 2, 3, 4];\n  const columns = [0, 1, 2, 3, 4];\n  const directions = [\"N\", \"E\", \"S\", \"W\"];\n  const randomDirection = directions[Math.floor(Math.random() * directions.length)];\n  const [direction, setDirection] = useState(randomDirection);\n  const [robotPosition, setRobotPosition] = useState([getRandomInt(5), getRandomInt(5)]); //   Get a spot on the board for the target\n\n  let randomTargetPosition = [getRandomInt(5), getRandomInt(5)]; //   Make sure the randomly generated spot for the target is not the same as the robot's position\n\n  while (_.isEqual(randomTargetPosition, robotPosition)) {\n    randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n  }\n\n  const [targetPosition, setTargetPosition] = useState(randomTargetPosition);\n\n  const rotateLeftIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faUndo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 26\n  }, this);\n\n  const rotateRightIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faRedo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 27\n  }, this);\n\n  const arrowUpIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faArrowUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n\n  const rotateRight = () => {\n    const currentDirection = directions.findIndex(element => {\n      return element === direction;\n    });\n\n    if (currentDirection === 3) {\n      setDirection(directions[0]);\n    } else {\n      setDirection(directions[currentDirection + 1]);\n    }\n\n    console.log(\"current Direction is \" + currentDirection);\n  };\n\n  const rotateLeft = () => {\n    const currentDirection = directions.findIndex(element => {\n      return element === direction;\n    });\n\n    if (currentDirection === 0) {\n      setDirection(directions[3]);\n    } else {\n      setDirection(directions[currentDirection - 1]);\n    }\n\n    console.log(\"current Direction is \" + currentDirection);\n  };\n\n  const moveForward = () => {\n    if (direction === \"N\") {\n      if (robotPosition[0] !== 0) {\n        setRobotPosition([robotPosition[0] - 1, robotPosition[1]]);\n      }\n    }\n\n    if (direction === \"E\") {\n      if (robotPosition[1] !== 4) {\n        setRobotPosition([robotPosition[0], robotPosition[1] + 1]);\n      }\n    }\n\n    if (direction === \"S\") {\n      if (robotPosition[0] !== 4) {\n        setRobotPosition([robotPosition[0] + 1, robotPosition[1]]);\n      }\n    }\n\n    if (direction === \"W\") {\n      if (robotPosition[1] !== 0) {\n        setRobotPosition([robotPosition[0], robotPosition[1] - 1]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Robot position is \" + robotPosition);\n    console.log(\"Target Position is \" + targetPosition);\n\n    if (_.isEqual(robotPosition, targetPosition)) {\n      console.log(\"Got the Target!!\");\n    }\n  }, [robotPosition]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"pt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          rows: rows,\n          columns: columns,\n          targetPosition: targetPosition,\n          robotPosition: robotPosition,\n          direction: direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: rotateLeft,\n            variant: \"primary\",\n            children: rotateLeftIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: moveForward,\n            variant: \"primary\",\n            children: arrowUpIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: rotateRight,\n            variant: \"primary\",\n            children: rotateRightIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"Zvwg04g1HaRDA5l4ej8oVfQJE0o=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/zaeemmaqsood/Desktop/robot_game/frontend/src/components/Game.js"],"names":["React","useEffect","useState","_","Board","Row","Col","Button","FontAwesomeIcon","faUndo","faRedo","faArrowUp","Game","getRandomInt","max","Math","floor","random","rows","columns","directions","randomDirection","length","direction","setDirection","robotPosition","setRobotPosition","randomTargetPosition","isEqual","targetPosition","setTargetPosition","rotateLeftIcon","rotateRightIcon","arrowUpIcon","rotateRight","currentDirection","findIndex","element","console","log","rotateLeft","moveForward"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport Board from \"./Board\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUndo, faRedo, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Game() {\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  const rows = [0, 1, 2, 3, 4];\n  const columns = [0, 1, 2, 3, 4];\n\n  const directions = [\"N\", \"E\", \"S\", \"W\"];\n  const randomDirection =\n    directions[Math.floor(Math.random() * directions.length)];\n\n  const [direction, setDirection] = useState(randomDirection);\n  const [robotPosition, setRobotPosition] = useState([\n    getRandomInt(5),\n    getRandomInt(5),\n  ]);\n\n  //   Get a spot on the board for the target\n  let randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n\n  //   Make sure the randomly generated spot for the target is not the same as the robot's position\n  while (_.isEqual(randomTargetPosition, robotPosition)) {\n    randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n  }\n\n  const [targetPosition, setTargetPosition] = useState(randomTargetPosition);\n\n  const rotateLeftIcon = <FontAwesomeIcon icon={faUndo} />;\n  const rotateRightIcon = <FontAwesomeIcon icon={faRedo} />;\n  const arrowUpIcon = <FontAwesomeIcon icon={faArrowUp} />;\n\n  const rotateRight = () => {\n    const currentDirection = directions.findIndex((element) => {\n      return element === direction;\n    });\n\n    if (currentDirection === 3) {\n      setDirection(directions[0]);\n    } else {\n      setDirection(directions[currentDirection + 1]);\n    }\n\n    console.log(\"current Direction is \" + currentDirection);\n  };\n\n  const rotateLeft = () => {\n    const currentDirection = directions.findIndex((element) => {\n      return element === direction;\n    });\n\n    if (currentDirection === 0) {\n      setDirection(directions[3]);\n    } else {\n      setDirection(directions[currentDirection - 1]);\n    }\n\n    console.log(\"current Direction is \" + currentDirection);\n  };\n\n  const moveForward = () => {\n    if (direction === \"N\") {\n      if (robotPosition[0] !== 0) {\n        setRobotPosition([robotPosition[0] - 1, robotPosition[1]]);\n      }\n    }\n\n    if (direction === \"E\") {\n      if (robotPosition[1] !== 4) {\n        setRobotPosition([robotPosition[0], robotPosition[1] + 1]);\n      }\n    }\n\n    if (direction === \"S\") {\n      if (robotPosition[0] !== 4) {\n        setRobotPosition([robotPosition[0] + 1, robotPosition[1]]);\n      }\n    }\n\n    if (direction === \"W\") {\n      if (robotPosition[1] !== 0) {\n        setRobotPosition([robotPosition[0], robotPosition[1] - 1]);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Robot position is \" + robotPosition);\n    console.log(\"Target Position is \" + targetPosition);\n\n    if (_.isEqual(robotPosition, targetPosition)) {\n      console.log(\"Got the Target!!\");\n    }\n  }, [robotPosition]);\n\n  return (\n    <>\n      <Row className=\"pt-5\">\n        <Col>\n          <Board\n            rows={rows}\n            columns={columns}\n            targetPosition={targetPosition}\n            robotPosition={robotPosition}\n            direction={direction}\n          ></Board>\n        </Col>\n      </Row>\n      <Row className=\"pt-5\">\n        <Col>\n          <div className=\"d-grid gap-2\">\n            <Button onClick={rotateLeft} variant=\"primary\">\n              {rotateLeftIcon}\n            </Button>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"d-grid gap-2\">\n            <Button onClick={moveForward} variant=\"primary\">\n              {arrowUpIcon}\n            </Button>\n          </div>\n        </Col>\n        <Col>\n          <div className=\"d-grid gap-2\">\n            <Button onClick={rotateRight} variant=\"primary\">\n              {rotateRightIcon}\n            </Button>\n          </div>\n        </Col>\n      </Row>\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}