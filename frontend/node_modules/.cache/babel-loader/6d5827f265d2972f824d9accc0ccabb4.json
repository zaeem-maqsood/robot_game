{"ast":null,"code":"var _jsxFileName = \"/Users/zaeemmaqsood/Desktop/robot_game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Board from \"./Board\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUndo, faRedo, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { axios } from \"../Axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Game() {\n  _s();\n\n  let history = useHistory();\n  const [highestScore, setHighestScore] = useState(0); // State variable to keep track of the score\n\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\"); // Function to generate random numbers\n\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  } // Define row and columns\n\n\n  const rows = [0, 1, 2, 3, 4];\n  const columns = [0, 1, 2, 3, 4]; // Possible directions the roobot can travel in\n\n  const directions = [\"N\", \"E\", \"S\", \"W\"]; // State variable to keep track of the robot's direction\n\n  const [direction, setDirection] = useState(\"N\"); // State variable to keep track of the robot's position\n\n  const [robotPosition, setRobotPosition] = useState([2, 2]); // Generate a random spot on the board for the target\n\n  let randomTargetPosition = [getRandomInt(5), getRandomInt(5)]; // Make sure the randomly generated spot for the target is not the same as the robot's position\n\n  while (_.isEqual(randomTargetPosition, robotPosition)) {\n    randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n  } // State variable to keep track of the target's position\n\n\n  const [targetPosition, setTargetPosition] = useState(randomTargetPosition); // Icons\n\n  const rotateLeftIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faUndo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 26\n  }, this);\n\n  const rotateRightIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faRedo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 27\n  }, this);\n\n  const arrowUpIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    icon: faArrowUp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 23\n  }, this); // Set Timer\n\n\n  const [time, setTime] = useState([60]);\n  useEffect(() => {\n    const apiUrl = \"scores/api/current-highest-score\";\n    axios.get(apiUrl).then(response => {\n      console.log(response.data);\n      setHighestScore(response.data.highest_score);\n    }).catch(err => console.log(err));\n  }); // Re-render the page every second\n\n  useEffect(() => {\n    if (!gameOver) {\n      let interval = setInterval(() => setTime(time => time - 1), 1000);\n\n      if (time === 0) {\n        console.log(\"Time Ran out\");\n        setGameOver(true);\n      }\n\n      return () => clearInterval(interval);\n    }\n  }, [time, history, gameOver]); //   Function to handle right rotation of Robot\n\n  const rotateRight = () => {\n    const currentDirection = directions.findIndex(element => {\n      return element === direction;\n    });\n\n    if (currentDirection === 3) {\n      setDirection(directions[0]);\n    } else {\n      setDirection(directions[currentDirection + 1]);\n    }\n  }; // Function to handle left rotation of Robot\n\n\n  const rotateLeft = () => {\n    const currentDirection = directions.findIndex(element => {\n      return element === direction;\n    });\n\n    if (currentDirection === 0) {\n      setDirection(directions[3]);\n    } else {\n      setDirection(directions[currentDirection - 1]);\n    }\n  }; // Function to handle forward movement of Robot\n\n\n  const moveForward = () => {\n    if (direction === \"N\") {\n      if (robotPosition[0] !== 0) {\n        setRobotPosition([robotPosition[0] - 1, robotPosition[1]]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"E\") {\n      if (robotPosition[1] !== 4) {\n        setRobotPosition([robotPosition[0], robotPosition[1] + 1]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"S\") {\n      if (robotPosition[0] !== 4) {\n        setRobotPosition([robotPosition[0] + 1, robotPosition[1]]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"W\") {\n      if (robotPosition[1] !== 0) {\n        setRobotPosition([robotPosition[0], robotPosition[1] - 1]);\n      } else {\n        setGameOver(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Robot position is \" + robotPosition);\n    console.log(\"Target Position is \" + targetPosition);\n\n    if (_.isEqual(robotPosition, targetPosition)) {\n      console.log(\"Got the Target!!\"); //   Get a spot on the board for the target\n\n      let randomTargetPosition = [getRandomInt(5), getRandomInt(5)]; //   Make sure the randomly generated spot for the target is not the same as the robot's position\n\n      while (_.isEqual(randomTargetPosition, robotPosition)) {\n        randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n      }\n\n      setTargetPosition(randomTargetPosition);\n      setScore(score => score + 1);\n    }\n  }, [robotPosition, targetPosition, setScore]);\n\n  const handleNameSubmit = e => {\n    e.preventDefault();\n\n    if (name < 3 && name > 20) {\n      setError(\"Name must be contain at least 3 characters and less than 20 characters\");\n    } else {\n      console.log(\"Submit Name\");\n      setError(\"\");\n      const apiUrl = \"scores/api/set-score\";\n      axios.post(apiUrl, {\n        params: {\n          username: name,\n          score: score\n        }\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      history.push(\"/leaderboard\");\n    }\n  };\n\n  if (gameOver) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => handleNameSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-5 text-center justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: [score > highestScore ? /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"New Highscore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 39\n            }, this) : \"\", /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Congratulations you scored \", score, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Record your name for be entered into the leaderboard.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-3 justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"name\",\n                maxLength: \"20\",\n                placeholder: \"Enter Name\",\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                className: \"text-muted\",\n                children: \"Max Characters: 20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-3 text-center justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-3 text-center justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              type: \"submit\",\n              onClick: e => {\n                setGameOver(false);\n                setScore(0);\n                setTime(60);\n              },\n              children: \"Play Again\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"pt-3 text-center justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"warning\",\n              type: \"submit\",\n              onClick: e => {\n                e.preventDefault();\n                history.push(\"/menu\");\n              },\n              children: \"Menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-5 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Time: \", time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Board, {\n            rows: rows,\n            columns: columns,\n            targetPosition: targetPosition,\n            robotPosition: robotPosition,\n            direction: direction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"pt-5\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: rotateLeft,\n              variant: \"primary\",\n              children: rotateLeftIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: moveForward,\n              variant: \"primary\",\n              children: arrowUpIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: rotateRight,\n              variant: \"primary\",\n              children: rotateRightIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(Game, \"qhcRRSlgQ5EKeVCQIoeIYqnQQ7I=\", false, function () {\n  return [useHistory];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/zaeemmaqsood/Desktop/robot_game/frontend/src/components/Game.js"],"names":["React","useEffect","useState","useHistory","_","Board","Row","Col","Button","Form","FontAwesomeIcon","faUndo","faRedo","faArrowUp","axios","Game","history","highestScore","setHighestScore","score","setScore","gameOver","setGameOver","name","setName","error","setError","getRandomInt","max","Math","floor","random","rows","columns","directions","direction","setDirection","robotPosition","setRobotPosition","randomTargetPosition","isEqual","targetPosition","setTargetPosition","rotateLeftIcon","rotateRightIcon","arrowUpIcon","time","setTime","apiUrl","get","then","response","console","log","data","highest_score","catch","err","interval","setInterval","clearInterval","rotateRight","currentDirection","findIndex","element","rotateLeft","moveForward","handleNameSubmit","e","preventDefault","post","params","username","push","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport Board from \"./Board\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUndo, faRedo, faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { axios } from \"../Axios\";\n\nfunction Game() {\n  let history = useHistory();\n\n  const [highestScore, setHighestScore] = useState(0);\n\n  // State variable to keep track of the score\n  const [score, setScore] = useState(0);\n\n  const [gameOver, setGameOver] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Function to generate random numbers\n  function getRandomInt(max) {\n    return Math.floor(Math.random() * max);\n  }\n\n  // Define row and columns\n  const rows = [0, 1, 2, 3, 4];\n  const columns = [0, 1, 2, 3, 4];\n\n  // Possible directions the roobot can travel in\n  const directions = [\"N\", \"E\", \"S\", \"W\"];\n\n  // State variable to keep track of the robot's direction\n  const [direction, setDirection] = useState(\"N\");\n\n  // State variable to keep track of the robot's position\n  const [robotPosition, setRobotPosition] = useState([2, 2]);\n\n  // Generate a random spot on the board for the target\n  let randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n\n  // Make sure the randomly generated spot for the target is not the same as the robot's position\n  while (_.isEqual(randomTargetPosition, robotPosition)) {\n    randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n  }\n\n  // State variable to keep track of the target's position\n  const [targetPosition, setTargetPosition] = useState(randomTargetPosition);\n\n  // Icons\n  const rotateLeftIcon = <FontAwesomeIcon icon={faUndo} />;\n  const rotateRightIcon = <FontAwesomeIcon icon={faRedo} />;\n  const arrowUpIcon = <FontAwesomeIcon icon={faArrowUp} />;\n\n  // Set Timer\n  const [time, setTime] = useState([60]);\n\n  useEffect(() => {\n    const apiUrl = \"scores/api/current-highest-score\";\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        console.log(response.data);\n        setHighestScore(response.data.highest_score);\n      })\n      .catch((err) => console.log(err));\n  });\n\n  // Re-render the page every second\n  useEffect(() => {\n    if (!gameOver) {\n      let interval = setInterval(() => setTime((time) => time - 1), 1000);\n\n      if (time === 0) {\n        console.log(\"Time Ran out\");\n        setGameOver(true);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [time, history, gameOver]);\n\n  //   Function to handle right rotation of Robot\n  const rotateRight = () => {\n    const currentDirection = directions.findIndex((element) => {\n      return element === direction;\n    });\n\n    if (currentDirection === 3) {\n      setDirection(directions[0]);\n    } else {\n      setDirection(directions[currentDirection + 1]);\n    }\n  };\n\n  // Function to handle left rotation of Robot\n  const rotateLeft = () => {\n    const currentDirection = directions.findIndex((element) => {\n      return element === direction;\n    });\n\n    if (currentDirection === 0) {\n      setDirection(directions[3]);\n    } else {\n      setDirection(directions[currentDirection - 1]);\n    }\n  };\n\n  // Function to handle forward movement of Robot\n  const moveForward = () => {\n    if (direction === \"N\") {\n      if (robotPosition[0] !== 0) {\n        setRobotPosition([robotPosition[0] - 1, robotPosition[1]]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"E\") {\n      if (robotPosition[1] !== 4) {\n        setRobotPosition([robotPosition[0], robotPosition[1] + 1]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"S\") {\n      if (robotPosition[0] !== 4) {\n        setRobotPosition([robotPosition[0] + 1, robotPosition[1]]);\n      } else {\n        setGameOver(true);\n      }\n    }\n\n    if (direction === \"W\") {\n      if (robotPosition[1] !== 0) {\n        setRobotPosition([robotPosition[0], robotPosition[1] - 1]);\n      } else {\n        setGameOver(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Robot position is \" + robotPosition);\n    console.log(\"Target Position is \" + targetPosition);\n\n    if (_.isEqual(robotPosition, targetPosition)) {\n      console.log(\"Got the Target!!\");\n      //   Get a spot on the board for the target\n      let randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n\n      //   Make sure the randomly generated spot for the target is not the same as the robot's position\n      while (_.isEqual(randomTargetPosition, robotPosition)) {\n        randomTargetPosition = [getRandomInt(5), getRandomInt(5)];\n      }\n      setTargetPosition(randomTargetPosition);\n\n      setScore((score) => score + 1);\n    }\n  }, [robotPosition, targetPosition, setScore]);\n\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n\n    if (name < 3 && name > 20) {\n      setError(\n        \"Name must be contain at least 3 characters and less than 20 characters\"\n      );\n    } else {\n      console.log(\"Submit Name\");\n      setError(\"\");\n      const apiUrl = \"scores/api/set-score\";\n      axios\n        .post(apiUrl, {\n          params: {\n            username: name,\n            score: score,\n          },\n        })\n        .then((response) => {\n          console.log(response.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n\n      history.push(\"/leaderboard\");\n    }\n  };\n\n  if (gameOver) {\n    return (\n      <>\n        <Form onSubmit={(e) => handleNameSubmit(e)}>\n          <Row className=\"pt-5 text-center justify-content-center\">\n            <Col lg={4}>\n              {score > highestScore ? <h1>New Highscore</h1> : \"\"}\n              <h3>Congratulations you scored {score} points</h3>\n              <p>Record your name for be entered into the leaderboard.</p>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 justify-content-center\">\n            <Col lg={4}>\n              <Form.Group className=\"mb-3\" controlId=\"formName\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  maxLength=\"20\"\n                  placeholder=\"Enter Name\"\n                  onChange={(e) => setName(e.target.value)}\n                />\n                <Form.Text className=\"text-muted\">Max Characters: 20</Form.Text>\n                <p className=\"error\">{error}</p>\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 text-center justify-content-center\">\n            <Col lg={4}>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 text-center justify-content-center\">\n            <Col lg={4}>\n              <Button\n                variant=\"success\"\n                type=\"submit\"\n                onClick={(e) => {\n                  setGameOver(false);\n                  setScore(0);\n                  setTime(60);\n                }}\n              >\n                Play Again\n              </Button>\n            </Col>\n          </Row>\n          <Row className=\"pt-3 text-center justify-content-center\">\n            <Col lg={4}>\n              <Button\n                variant=\"warning\"\n                type=\"submit\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  history.push(\"/menu\");\n                }}\n              >\n                Menu\n              </Button>\n            </Col>\n          </Row>\n        </Form>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Row className=\"pt-5 text-center\">\n          <Col>\n            <h3>Score: {score}</h3>\n          </Col>\n          <Col>\n            <h3>Time: {time}</h3>\n          </Col>\n        </Row>\n        <Row className=\"pt-3\">\n          <Col>\n            <Board\n              rows={rows}\n              columns={columns}\n              targetPosition={targetPosition}\n              robotPosition={robotPosition}\n              direction={direction}\n            ></Board>\n          </Col>\n        </Row>\n        <Row className=\"pt-5\">\n          <Col>\n            <div className=\"d-grid gap-2\">\n              <Button onClick={rotateLeft} variant=\"primary\">\n                {rotateLeftIcon}\n              </Button>\n            </div>\n          </Col>\n          <Col>\n            <div className=\"d-grid gap-2\">\n              <Button onClick={moveForward} variant=\"primary\">\n                {arrowUpIcon}\n              </Button>\n            </div>\n          </Col>\n          <Col>\n            <div className=\"d-grid gap-2\">\n              <Button onClick={rotateRight} variant=\"primary\">\n                {rotateRightIcon}\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}